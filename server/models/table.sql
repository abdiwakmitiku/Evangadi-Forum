CREATE TABLE IF NOT EXISTS Users(
    UserId INT AUTO_INCREMENT,
    Username VARCHAR(50) NOT NULL UNIQUE,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UserId)
);

CREATE TABLE IF NOT EXISTS Questions(
    QuestionId INT AUTO_INCREMENT, 
    UserId INT NOT NULL,
    Title VARCHAR(100) NOT NULL,
    Description VARCHAR(255) NOT NULL,
    Tag VARCHAR(100) DEFAULT NULL,
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Views INT DEFAULT 0,
    PRIMARY KEY(QuestionId),
    FOREIGN KEY(UserId) REFERENCES Users(UserId) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Answers(
    AnswerId INT AUTO_INCREMENT,
    QuestionId INT NOT NULL,
    UserId INT NOT NULL,
    Answer TEXT NOT NULL,
    PRIMARY KEY(AnswerId),
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (QuestionId) REFERENCES Questions(QuestionId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX Index_UserId (UserId)
);
CREATE TABLE IF NOT EXISTS QuestionLikes (
    QLikeId INT AUTO_INCREMENT,
    UserId INT NOT NULL,
    QuestionId INT NOT NULL,
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(QLikeId),
    UNIQUE(UserId, QuestionId), 
    FOREIGN KEY(UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY(QuestionId) REFERENCES Questions(QuestionId) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AnswerLikes (
    ALikeId INT AUTO_INCREMENT,
    UserId INT NOT NULL,
    AnswerId INT NOT NULL,
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(ALikeId),
    UNIQUE(UserId, AnswerId), 
    FOREIGN KEY(UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY(AnswerId) REFERENCES Answers(AnswerId) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS QuestionViews (
  UserId INT NOT NULL,
  QuestionId INT NOT NULL,
  ViewedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (UserId, QuestionId),
  FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
  FOREIGN KEY (QuestionId) REFERENCES Questions(QuestionId) ON DELETE CASCADE
);